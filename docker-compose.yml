name: ${PROJECT_NAME}
services:
  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}-db
    volumes:
      - mysql-data:/var/lib/mysql
      # - ./_entrypoint:/docker-entrypoint-initdb.d
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_APP_USER}
      MYSQL_PASSWORD: ${MYSQL_APP_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}
    networks:
      - pf-net
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 5

  backend:
    depends_on:
      mysql:
        condition: service_healthy
    image: ${BACKEND_IMAGE_NAME}
    container_name: ${PROJECT_NAME}-backend
    restart: always
    networks:
      - pf-net
    environment:
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_HOST: ${PROJECT_NAME}-db
      MYSQL_APP_USER: ${MYSQL_APP_USER}
      MYSQL_APP_PASSWORD: ${MYSQL_APP_PASSWORD}
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DEBUG: pf-backend
    ports:
      - "${BACKEND_PORT}:3000"
    volumes:
      - ./backend/logs:/app/logs
    post_start:
      - command: [ "sh", "-c", 'npm run db:migrate | awk ''{ print strftime("[%Y-%m-%d %H:%M:%S]"), $0; fflush(); }'' | tee -a /app/logs/migration.log' ]

  frontend:
    depends_on:
      - backend
    image: ${FRONTEND_IMAGE_NAME}
    container_name: ${PROJECT_NAME}-frontend
    restart: always
    ports:
      - "${FRONTEND_PORT}:4000"
    networks:
      - pf-net
    build:
      context: ./preflight-frontend
      args:
        NEXT_PUBLIC_ENDPOINT: ${NEXT_PUBLIC_ENDPOINT}
    environment:
      NEXT_PUBLIC_ENDPOINT: ${NEXT_PUBLIC_ENDPOINT}

volumes:
  mysql-data:
    name: ${PROJECT_NAME}-pf-data

networks:
  pf-net:
    name: ${PROJECT_NAME}-pf-net
